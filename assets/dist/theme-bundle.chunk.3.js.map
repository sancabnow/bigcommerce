{"version":3,"sources":["webpack:///./assets/js/theme/common/nod.js?edc7**","webpack:///./assets/js/theme/common/models/forms.js?df30*","webpack:///./assets/js/theme/common/nod-functions/min-max-validate.js?fb2f**","webpack:///./~/lodash/internal/baseIndexOf.js?1e8f","webpack:///./~/lodash/lang/isNaN.js?205a**","webpack:///./~/nod-validate/nod.js?5fa7**","webpack:///./assets/js/theme/common/form-utils.js?1dc0","webpack:///./~/lodash/collection/contains.js?472e","webpack:///./~/lodash/collection/includes.js?b5c2","webpack:///./~/lodash/internal/baseValues.js?0286","webpack:///./~/lodash/internal/createCompounder.js?7ba2","webpack:///./~/lodash/internal/indexOfNaN.js?4ed1","webpack:///./~/lodash/object/values.js?3132","webpack:///./~/lodash/string/camelCase.js?a067","webpack:///./~/lodash/string/capitalize.js?9cf8","webpack:///./~/lodash/string/deburr.js?c2b1","webpack:///./~/lodash/string/words.js?a175","webpack:///./assets/js/theme/product/reviews.js","webpack:///./assets/js/theme/product/video-gallery.js","webpack:///./assets/js/theme/product.js"],"names":["nod","classes","errorClass","successClass","errorMessageClass","checkFunctions","forms","email","value","re","test","password","notEmpty","length","minMaxValidate","minInputSelector","maxInputSelector","validate","cb","minValue","parseFloat","$","val","maxValue","inputTagNames","classifyInput","input","formFieldClass","$input","$formField","parent","tagName","prop","toLowerCase","className","specificClassName","inputType","addClass","classifyForm","formSelector","options","$form","$inputs","find","join","each","__","getFieldId","$field","fieldId","match","insertStateHiddenField","$stateField","stateFieldAttrs","type","name","after","Validators","setEmailValidation","validator","field","add","selector","result","errorMessage","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","data","Object","keys","forEach","hasClass","removeClass","$reviewForm","submit","$reviewsContent","$collapsible","initLinkBind","injectPaginationLink","collapseReviews","$content","click","trigger","CollapsibleEvents","window","location","hash","indexOf","$nextLink","$prevLink","attr","registerValidation","performCheck","VideoGallery","$element","$player","$videos","currentVideo","bindEvents","selectNewVideo","e","preventDefault","$target","currentTarget","id","$selectedThumb","setMainVideo","setActiveThumb","on","bind","videoGallery","pluginKey","$videoGallery","index","element","$el","isInitialized","Product","context","url","href","$reviewLink","before","next","document","history","replaceState","title","pathname","loaded","collapsibleFactory","productDetails","ProductDetails","BCData","product_attributes","review","Review","areAll","productReviewHandler"],"mappings":";;;;;;;;;AAGA;AACA,oDAAAA,CAAIC,OAAJ,CAAYC,UAAZ,CAAyB,mBAAzB,CACA,oDAAAF,CAAIC,OAAJ,CAAYE,YAAZ,CAA2B,qBAA3B,CACA,oDAAAH,CAAIC,OAAJ,CAAYG,iBAAZ,CAAgC,oBAAhC,CAEA;AACA,oDAAAJ,CAAIK,cAAJ,CAAmB,SAAnB,EAAgC,gFAAhC,CAEA,yDAAe,oDAAf,E;;;;;;;;ACXA,GAAMC,OAAQ,CACVC,KADU,gBACJC,KADI,CACG,CACT,GAAMC,IAAK,YAAX,CACA,MAAOA,IAAGC,IAAH,CAAQF,KAAR,CACV,CAJS,CAMV;;;;OAKAG,QAXU,mBAWDH,KAXC,CAWM,CACZ,MAAO,MAAKI,QAAL,CAAcJ,KAAd,CACV,CAbS,CAeV;;;;;OAMAI,QArBU,mBAqBDJ,KArBC,CAqBM,CACZ,MAAOA,OAAMK,MAAN,CAAe,CACzB,CAvBS,CAAd,CA0BA,yDAAeP,KAAf,E;;;;;;;;;;;;ACvBA,QAASQ,eAAT,CAAwBC,gBAAxB,CAA0CC,gBAA1C,CAA4D,CACxD,QAASC,SAAT,CAAkBC,EAAlB,CAAsB,CAClB,GAAMC,UAAWC,WAAW,8CAAAC,CAAEN,gBAAF,EAAoBO,GAApB,EAAX,CAAjB,CACA,GAAMC,UAAWH,WAAW,8CAAAC,CAAEL,gBAAF,EAAoBM,GAApB,EAAX,CAAjB,CAEA,GAAIC,SAAWJ,QAAX,EAAuB,0DAAQI,QAAR,CAAvB,EAA4C,0DAAQJ,QAAR,CAAhD,CAAmE,CAC/D,MAAOD,IAAG,IAAH,CACV,CAED,MAAOA,IAAG,KAAH,CACV,CAED,MAAOD,SACV,CAED,yDAAeH,cAAf,E;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA,uDAAuD,SAAS;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C,2CAA2C;AAC3C,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6DAA6D,gBAAgB;;AAE7E;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9sCA,GAAMU,eAAgB,CAClB,OADkB,CAElB,QAFkB,CAGlB,UAHkB,CAAtB,CAMA;;;;;GAMA,QAASC,cAAT,CAAuBC,KAAvB,CA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AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;sKC/BI,gBAAYyF,WAAZ,CAAyB,8BACrB,KAAKtC,SAAL,CAAiB,mFAAA3D,CAAI,CACjBk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","file":"theme-bundle.chunk.3.js","sourcesContent":["import nod from 'nod-validate';\nimport minMaxValidate from './nod-functions/min-max-validate';\n\n// Hook our SCSS framework form field status classes into the nod validation system before use\nnod.classes.errorClass = 'form-field--error';\nnod.classes.successClass = 'form-field--success';\nnod.classes.errorMessageClass = 'form-inlineMessage';\n\n// Register validate functions\nnod.checkFunctions['min-max'] = minMaxValidate;\n\nexport default nod;\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/common/nod.js","const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/common/models/forms.js","import _ from 'lodash';\nimport $ from 'jquery';\n\nfunction minMaxValidate(minInputSelector, maxInputSelector) {\n    function validate(cb) {\n        const minValue = parseFloat($(minInputSelector).val());\n        const maxValue = parseFloat($(maxInputSelector).val());\n\n        if (maxValue > minValue || _.isNaN(maxValue) || _.isNaN(minValue)) {\n            return cb(true);\n        }\n\n        return cb(false);\n    }\n\n    return validate;\n}\n\nexport default minMaxValidate;\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/common/nod-functions/min-max-validate.js","var indexOfNaN = require('./indexOfNaN');\n\n/**\n * The base implementation of `_.indexOf` without support for binary searches.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return indexOfNaN(array, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/baseIndexOf.js\n// module id = 360\n// module chunks = 2 3 5 6 7 8 9","var isNumber = require('./isNumber');\n\n/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n * which returns `true` for `undefined` and other non-numeric values.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n  return isNumber(value) && value != +value;\n}\n\nmodule.exports = isNaN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lang/isNaN.js\n// module id = 361\n// module chunks = 0 1 2 3 5 6 7 8 9 10","\n/**\n *\n *\n * nod v.2.0.12\n * Gorm Casper\n *\n *\n *\n * This is a short breakdown of the code to help you find your way around.\n *\n *\n * An `element` always refer to some input element defined by the user via the\n * `selector` key.\n *\n * A `metric` is the user created objects that is used to add checks to\n * nod.\n *\n * Each `element` will have at most one of a `listener`, a `checker`, a\n * `checkHandler`, and a `domNode` \"attached\" to it. The `listener` listens\n * for inputs or changes to the `element` and passes the new value on to to the\n * `checker` which performs its checks and passes the the results on to the\n * `checkHandler` which calculates the new state of the `element` which it\n * passes on to the `domNode` which will update the dom.\n *\n * The four main parts, the listener, the checker, the checkHandler, and the\n * domNode all communicate through the `mediator` by firing events identified\n * by a unique id. They do not know of each other's existance, and so no\n * communication flows directly between them.\n *\n * All listeners, checkers, handlers, and domNodes are grouped together in\n * `collections`, which are basically a glorified array that makes it easy\n * not to get duplicate items for each element (for instance two listeners\n * listening to the same element).\n *\n * The communication flow looks like this:\n * listener -> checker -> checkHandler -> domNode\n *\n * Between each part, you have the mediator.\n *\n *\n * `Metrics` are added by the user, which sets up the system above. Notice\n * that a metric can target multiple elements at once, and that there can\n * be overlaps. One metric definitely does not equal one element or one\n * check.\n *\n */\n\nfunction nod (config) {\n    var form,\n        configuration   = {},\n        mediator        = nod.makeMediator(),\n        eventEmitter    = nod.makeEventEmitter(mediator),\n\n        // Creating (empty) collections\n        listeners       = nod.makeCollection(nod.makeListener),\n        checkers        = nod.makeCollection(nod.makeChecker),\n        checkHandlers   = nod.makeCollection(nod.makeCheckHandler),\n        domNodes        = nod.makeCollection(nod.makeDomNode);\n\n    /**\n     * Entry point for the user. The user passes in an array of metrics (an\n     * object containing a selector, a validate string/function, etc.) and it\n     * gets processed from here.\n     *\n     * This function, is mostly about cleaning up what the user passed us.\n     */\n    function addMetrics (metrics) {\n        // Make sure we are dealing with an array of metrics.\n        var arrayMetrics = Array.isArray(metrics) ? metrics : [metrics];\n\n        arrayMetrics.forEach(function (metric) {\n            var validateArray, errorMessageArray,\n                notArray = !Array.isArray(metric.validate);\n\n            // If the 'validate' is not an array, then we're good to go.\n            if (notArray) {\n                addMetric(metric);\n\n            // If it is an array (e.g., validate: ['email', 'max-length:10']),\n            // then we need to split them up into multiple metrics, and add\n            // them individually.\n            } else {\n                if (!Array.isArray(metric.errorMessage)) {\n                    var errorMsg = 'If you pass in `validate:...` as an ' +\n                        ' array, then `errorMessage:...` also needs to be an ' +\n                        ' array. \"' + metric.validate + '\", and \"' +\n                        metric.errorMessage + '\"';\n\n                    throw Error(errorMsg);\n                }\n\n                // We store each as arrays, and then run through them,\n                // overwriting each of the keys accordingly.\n                validateArray     = metric.validate;\n                errorMessageArray = metric.errorMessage;\n\n                validateArray.forEach(function (validate, i) {\n                    // Overwrite the array with the individual 'validate' and\n                    // 'errorMessage'.\n                    metric.validate     = validate;\n                    metric.errorMessage = errorMessageArray[i];\n\n                    addMetric(metric);\n                });\n            }\n        });\n    }\n\n    function addMetric (metric) {\n        var specialTriggers = [],\n\n            // The function that will check the value of the element.\n            checkFunction = nod.getCheckFunction(metric),\n\n            // A list of elements that this metric will target.\n            elements = nod.getElements(metric.selector),\n\n            // A \"set\" here, refers to an obj with one listener, one checker,\n            // and one checkHandler. Only every one for each element in the\n            // dom.\n            metricSets = elements.map(function (element) {\n                return {\n                    listener:       listeners.findOrMake(element,\n                                                         mediator,\n                                                         metric.triggerEvents,\n                                                         configuration),\n                    checker:        checkers.findOrMake(element, mediator),\n                    checkHandler:   checkHandlers.findOrMake(element,\n                                                             mediator,\n                                                             configuration),\n                    domNode:        domNodes.findOrMake(element,\n                                                        mediator,\n                                                        configuration)\n                };\n            });\n\n        // Saved for later reference in case the user has a `tap` function\n        // defined.\n        checkFunction.validate = (typeof metric.validate === 'function')\n            ? metric.validate.toString()\n            : metric.validate;\n\n        // Special cases. These `validates` affect each other, and their state\n        // needs to update each time either of the elements' values change.\n        if (metric.validate === 'one-of'\n            || metric.validate === 'only-one-of'\n            || metric.validate === 'some-radio') {\n            specialTriggers.push(metric.selector);\n        }\n\n        if (typeof metric.validate === 'string'\n            && metric.validate.indexOf('same-as') > -1) {\n            specialTriggers.push(metric.validate.split(':')[1]);\n        }\n\n        // Helper function, used in the loop below.\n        function subscribeToTriggers (checker, selector) {\n            var triggerElements = nod.getElements(selector);\n\n            triggerElements.forEach(function (element) {\n                var listener = listeners.findOrMake(element,\n                                                    mediator,\n                                                    null,\n                                                    configuration);\n\n                checker.subscribeTo(listener.id);\n            });\n        }\n\n        // Here we set up the \"connections\" between each of our main parts.\n        // They communicate only through the mediator.\n        metricSets.forEach(function (metricSet) {\n            // :: Listener -> Checker\n\n            // We want our checker to listen to the listener. A listener has an\n            // id, which it uses when it fires events to the mediator (which\n            // was set up when the listener was created).\n            metricSet.checker.subscribeTo(metricSet.listener.id);\n\n            // If the user set a `triggeredBy`, the checker need to listen to\n            // changes on this element as well.\n            // Same goes for special triggers that we set.\n            subscribeToTriggers(metricSet.checker, metric.triggeredBy);\n            subscribeToTriggers(metricSet.checker, specialTriggers);\n\n            // :: Checker -> checkHandler\n\n            var checkId = nod.unique();\n\n            // We add the check function as one to be checked when the user\n            // inputs something. (There might be more than this one).\n            metricSet.checker.addCheck(checkFunction, checkId);\n\n            // We want the check handler to listen for results from the checker\n            metricSet.checkHandler.subscribeTo(checkId,\n                                               metric.errorMessage,\n                                               metric.defaultStatus);\n\n            if (configuration.noDom) {\n                eventEmitter.subscribe(metricSet.checkHandler.id);\n            } else {\n                // :: checkHandler -> domNode\n\n                // The checkHandler has its own id (and only ever needs one), so\n                // we just ask the domNode to listen for that.\n                metricSet.domNode.subscribeTo(metricSet.checkHandler.id);\n            }\n        });\n\n        // After all is done, we may have to enable/disable a submit button.\n        toggleSubmit();\n    }\n\n    /**\n     * If a form is added, we listen for submits, and if the has also set\n     * `preventSubmit` in the configuration, then we stop the commit from\n     * happening unless all the elements are valid.\n     */\n    function addForm (selector) {\n        var form = nod.getElement(selector);\n\n        form.addEventListener('submit', possiblePreventSubmit, false);\n    }\n\n    // Prevent function, used above\n    function possiblePreventSubmit (event) {\n        if (configuration.preventSubmit && !areAll(nod.constants.VALID)) {\n            event.preventDefault();\n\n            // Show errors to the user\n            checkers.forEach(function (checker) {\n                checker.performCheck({\n                    event: event\n                });\n            });\n\n            // Focus on the first invalid element\n            for (var i = 0, len = checkHandlers.length; i < len; i++) {\n                var checkHandler = checkHandlers[i];\n\n                if (checkHandler.getStatus().status === nod.constants.INVALID) {\n                    checkHandler.element.focus();\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Removes elements completely.\n     */\n    function removeElement (selector) {\n        var elements = nod.getElements(selector);\n\n        elements.forEach(function (element) {\n            listeners.removeItem(element);\n            checkers.removeItem(element);\n            checkHandlers.removeItem(element);\n            domNodes.removeItem(element);\n        });\n    }\n\n    /**\n     * configure\n     *\n     * Changes the configuration object used throughout the code for classes,\n     * delays, messages, etc.\n     *\n     * It can either be called with a key/value pair (two arguments), or with\n     * an object with key/value pairs.\n     */\n    function configure (key, value) {\n        var attributes = {};\n\n        if (arguments.length > 1) {\n            attributes[key] = value;\n        } else {\n            attributes = key;\n        }\n\n        for (var k in attributes) {\n            configuration[k] = attributes[k];\n        }\n\n        if (attributes.submit || attributes.disableSubmit) {\n            toggleSubmit();\n        }\n\n        if (attributes.form) {\n            addForm(attributes.form);\n        }\n    }\n\n    /**\n     * toggleSubmit\n     *\n     * Toggles the submit button (enabled if every element is valid, otherwise\n     * disabled).\n     */\n    function toggleSubmit () {\n        if (configuration.submit && configuration.disableSubmit) {\n            nod.getElements(configuration.submit).forEach(function (submitBtn) {\n                submitBtn.disabled = !areAll(nod.constants.VALID);\n            });\n        }\n    }\n\n    /**\n     * Listen to all checks, and if the user has set in the configuration to\n     * enable/disabled the submit button, we do that.\n     */\n    mediator.subscribe('all', toggleSubmit);\n\n    function areAll (status) {\n        for (var i = 0, len = checkHandlers.length; i < len; i++) {\n            if (checkHandlers[i].getStatus().status !== status) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function setMessageOptions (options) {\n        options = Array.isArray(options) ? options : [options];\n\n        options.forEach(function (option) {\n            var elements = nod.getElements(option.selector);\n\n            elements.forEach(function (element) {\n                var domNode = domNodes.findOrMake(element,\n                                                  mediator,\n                                                  configuration);\n\n                domNode.setMessageOptions(option.parent, option.errorSpan);\n            });\n        });\n    }\n\n    /**\n     * Listen to all checks and allow the user to listen in, if he set a `tap`\n     * function in the configuration.\n     */\n    mediator.subscribe('all', function (options) {\n        if (typeof configuration.tap === 'function'\n            && options.type === 'check') {\n            configuration.tap(options);\n        }\n    });\n\n    function getStatus (selector, showErrorMessage) {\n        var element = nod.getElement(selector),\n            status  = checkHandlers.findOrMake(element).getStatus();\n\n        return showErrorMessage ? status : status.status;\n    }\n\n    function performCheck (selector) {\n        var cs = selector\n            ? nod.getElements(selector).map(checkers.findOrMake)\n            : checkers;\n\n        cs.forEach(function (checker) {\n            checker.performCheck();\n        });\n    }\n\n    function setInvalid (selector, errorMessage) {\n        var element = nod.getElement(selector),\n            domNode  = domNodes.findOrMake(element);\n\n        domNode.set({\n            result: nod.constants.INVALID,\n            errorMessage: errorMessage || ''\n        });\n    }\n\n    function setValid (selector) {\n        var element = nod.getElement(selector),\n            domNode  = domNodes.findOrMake(element);\n\n        domNode.set({\n            result: nod.constants.VALID,\n            errorMessage: ''\n        });\n    }\n\n    function setAllNodeValid () {\n        for (var i = 0, len = domNodes.length; i < len; i++) {\n            setValid(domNodes[i].element);\n        }\n    }\n\n    /**\n     * Internal functions that are exposed to the public.\n     */\n    var nodInstace = {\n        add:                    addMetrics,\n        remove:                 removeElement,\n        areAll:                 areAll,\n        getStatus:              getStatus,\n        configure:              configure,\n        setMessageOptions:      setMessageOptions,\n        performCheck:           performCheck,\n        setInvalid:             setInvalid,\n        setValid:               setValid,\n        setAllNodeValid:        setAllNodeValid\n    };\n\n    if (config) {\n        nodInstace.configure(config);\n    }\n\n    return nodInstace;\n}\n\nnod.constants = {\n    VALID:          'valid',\n    INVALID:        'invalid',\n    UNCHECKED:      'unchecked',\n\n    DELAY:          700\n};\n\nnod.classes = {\n    successClass:         'nod-success',\n    successMessageClass:  'nod-success-message',\n    errorClass:           'nod-error',\n    errorMessageClass:    'nod-error-message'\n};\n\n// Helper function to create unique id's\nnod.unique = (function () {\n    var uniqueCounter = 0;\n\n    return function () {\n        return uniqueCounter++;\n    };\n})();\n\n/** makeMediator\n *\n * Minimal implementation of a mediator pattern, used for communication between\n * checkers and checkHandlers (checkers fires events which handlers can\n * subscribe to). Unique ID's are used to tell events apart.\n *\n * Subscribing to 'all' will give you all results from all checks.\n */\nnod.makeMediator = function () {\n    var subscribers = [],\n        all = [];\n\n    return {\n        subscribe: function subscribe (id, fn) {\n            if (id === 'all') {\n                all.push(fn);\n            } else {\n                if (!subscribers[id]) {\n                    subscribers[id] = [];\n                }\n\n                if (subscribers[id].indexOf(fn) === -1) {\n                    subscribers[id].push(fn);\n                }\n            }\n        },\n\n        fire: function fire (options) {\n            var subscribedFunctions = subscribers[options.id].concat(all);\n\n            subscribedFunctions.forEach(function (subscribedFunction) {\n                subscribedFunction(options);\n            });\n        }\n    };\n};\n\nnod.findCollectionIndex = function (collection, element) {\n    for (var i in collection) {\n        if (collection[i].element === element) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n\n/**\n * makeCollection\n *\n * A minimal implementation of a \"collection\", inspired by collections from\n * BackboneJS. Used by listeners, checkers, and checkHandlers.\n */\nnod.makeCollection = function (maker) {\n    var collection = [];\n\n    collection.findOrMake = function (element) {\n        var index = nod.findCollectionIndex(collection, element);\n\n        // Found\n        if (index !== -1) {\n            return collection[index];\n        }\n\n        // None found, let's make one then.\n        var item = maker.apply(null, arguments);\n\n        collection.push(item);\n\n        return item;\n    };\n\n    collection.removeItem = function (element) {\n        var index = nod.findCollectionIndex(collection, element),\n            item = collection[index];\n\n        if (!item) {\n            return;\n        }\n\n        // Call .dispose() if it exists\n        if (typeof item.dispose === 'function') {\n            item.dispose();\n        }\n\n        // Remove item\n        collection.splice(index, 1);\n    };\n\n    return collection;\n};\n\n/**\n * makeListener\n *\n * Takes care of listening to changes to its element and fire them off as\n * events on the mediator for checkers to listen to.\n */\nnod.makeListener = function (element, mediator, triggerEvents, configuration) {\n    var id = nod.unique(),\n        $element;\n\n    function changed (event) {\n        mediator.fire({\n            id:     id,\n            event:  event,\n            type:   'change'\n        });\n    }\n\n    element.addEventListener('input', changed, false);\n    element.addEventListener('change', changed, false);\n    element.addEventListener('blur', changed, false);\n\n    if (configuration.jQuery) {\n        $element = configuration.jQuery(element);\n\n        $element.on('propertychange change click keyup input paste', changed);\n    }\n\n    if (triggerEvents) {\n        triggerEvents = Array.isArray(triggerEvents)\n            ? triggerEvents\n            : [triggerEvents];\n\n        triggerEvents.forEach(function (eventName) {\n            element.addEventListener(eventName, changed, false);\n        });\n    }\n\n    function dispose () {\n        element.removeEventListener('input', changed, false);\n        element.removeEventListener('change', changed, false);\n        element.removeEventListener('blur', changed, false);\n\n        if ($element) {\n            $element.off();\n        }\n\n        if (triggerEvents) {\n            triggerEvents.forEach(function (eventName) {\n                element.removeEventListener(eventName, changed, false);\n            });\n        }\n    }\n\n    return {\n        element:    element,\n        dispose:    dispose,\n        id:         id\n    };\n};\n\n/**\n * makeChecker\n *\n * An \"checker\" communicates primarily with the mediator. It listens for input\n * changes (coming from listeners), performs its checks and fires off results\n * back to the mediator for checkHandlers to handle.\n *\n * The checker has a 1 to 1 relationship with an element, an listeners, and an\n * checkHandler; although they may communicate with other \"sets\" of listeners,\n * checkers and handlers.\n *\n * Checks are added, from the outside, and consists of a checkFunction (see\n * nod.checkFunctions) and a unique id.\n */\nnod.makeChecker = function (element, mediator) {\n    var checks = [];\n\n    function subscribeTo (id) {\n        mediator.subscribe(id, performCheck);\n    }\n\n    // Run every check function against the value of the element.\n    function performCheck (options) {\n        checks.forEach(function (check) {\n            check(options || {});\n        });\n    }\n\n    // Add a check function to the element. The result will be handed off to the\n    // mediator (for checkHandlers to evaluate).\n    function addCheck (checkFunction, id) {\n        function callback (result) {\n            mediator.fire({\n                id: id,\n                type: 'check',\n                result: result,\n                element: element,\n                validate: checkFunction.validate\n            });\n        }\n\n        checks.push(function (options) {\n            // If element.value is undefined, then we might be dealing with\n            // another type of element; like <div contenteditable='true'>\n            var value = element.value === undefined\n                ? element.innerHTML\n                : element.value;\n\n            options.element = element;\n\n            checkFunction(callback, value, options);\n        });\n    }\n\n    return {\n        subscribeTo:    subscribeTo,\n        addCheck:       addCheck,\n        performCheck:   performCheck,\n        element:        element\n    };\n};\n\n/**\n * makeCheckHandler\n *\n * Handles checks coming in from the mediator and takes care of calculating the\n * state and error messages.\n *\n * The checkHandlers lives in one to one with the element parsed in, and listens\n * for (usually) multiple error checks.\n */\nnod.makeCheckHandler = function (element, mediator, configuration) {\n    var results     = {},\n        id          = nod.unique();\n\n    function subscribeTo (id, errorMessage, defaultStatus) {\n        // Create a representation of the type of error in the results object.\n        if (!results[id]) {\n            results[id] = {\n                status: defaultStatus || nod.constants.UNCHECKED,\n                errorMessage: errorMessage\n            };\n        }\n\n        // Subscribe to error id.\n        mediator.subscribe(id, checkHandler);\n    }\n\n    function checkHandler (result) {\n        results[result.id].status = result.result\n            ? nod.constants.VALID\n            : nod.constants.INVALID;\n\n        notifyMediator();\n    }\n\n    // Runs through all results to see what kind of feedback to show the user.\n    function notifyMediator () {\n        var status = getStatus();\n\n        // Event if might be valid we pass along an undefined errorMessage.\n        mediator.fire({\n            id:             id,\n            type:           'result',\n            result:         status.status,\n            element:        element,\n            errorMessage:   status.errorMessage\n        });\n    }\n\n    function getStatus () {\n        var status, errorMessage;\n\n        for (var id in results) {\n            status = results[id].status;\n\n            if (results[id].status === nod.constants.INVALID) {\n                errorMessage = results[id].errorMessage;\n                break;\n            }\n        }\n\n        return {\n            status:        status,\n            errorMessage:  errorMessage\n        };\n    }\n\n    return {\n        id:             id,\n        subscribeTo:    subscribeTo,\n        checkHandler:   checkHandler,\n        getStatus:      getStatus,\n        element:        element\n    };\n};\n\n// Helper functions for `makeDomNode`.\nnod.hasClass = function (className, el) {\n    if (el.classList) {\n        return el.classList.contains(className);\n    } else {\n        var regex = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n        return !!el.className.match(regex);\n    }\n};\n\nnod.removeClass = function (className, el) {\n    if (el.classList) {\n        el.classList.remove(className);\n    } else if (nod.hasClass(className, el)) {\n        var regex = new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)');\n        el.className = el.className.replace(regex, '');\n    }\n};\n\nnod.addClass = function (className, el) {\n    if (el.classList) {\n        el.classList.add(className);\n    } else if (!nod.hasClass(className, el)) {\n        el.className += ' ' + className;\n    }\n};\n\nnod.getParent = function (element, configuration) {\n    var klass = configuration.parentClass;\n\n    if (klass) {\n        klass = klass.charAt(0) === '.' ? klass.slice(1) : klass;\n        return nod.findParentWithClass(element.parentNode, klass);\n    } else {\n        return element.parentNode;\n    }\n};\n\nnod.findParentWithClass = function (parent, klass) {\n    // Guard (only the `window` does not have a parent).\n    if (!parent.parentNode) {\n        return parent;\n    }\n\n    // Found it\n    if (nod.hasClass(klass, parent)) {\n        return parent;\n    }\n\n    // Try next parent (recursion)\n    return nod.findParentWithClass(parent.parentNode, klass);\n};\n\n/**\n * makeDomNode\n *\n * This creates the error/success message behind the input element, as well as\n * takes care of updating classes and taking care of its own state.\n *\n * The dom node is owned by checkHandler, and has a one to one relationship with\n * both the checkHandler and the input element being checked.\n *\n */\nnod.makeDomNode = function (element, mediator, configuration) {\n    // A 'domNode' consists of two elements: a 'parent', and a 'span'. The\n    // parent is given as a paremeter, while the span is created and added as a\n    // child to the parent.\n    var parent              = nod.getParent(element, configuration),\n        _status             = nod.constants.UNCHECKED,\n        pendingUpdate       = null,\n        span                = document.createElement('span'),\n        customSpan          = false;\n\n    span.style.display = 'none';\n\n    if (!configuration.noDom) {\n        parent.appendChild(span);\n    }\n\n    // Updates the class of the parent to match the status of the element.\n    function updateParent (status) {\n        var successClass = configuration.successClass\n                           || nod.classes.successClass,\n            errorClass = configuration.errorClass\n                         || nod.classes.errorClass;\n\n        switch (status) {\n        case nod.constants.VALID:\n            nod.removeClass(errorClass, parent);\n            nod.addClass(successClass, parent);\n            break;\n\n        case nod.constants.INVALID:\n            nod.removeClass(successClass, parent);\n            nod.addClass(errorClass, parent);\n            break;\n        }\n    }\n\n    // Updates the text and class according to the status.\n    function updateSpan (status, errorMessage) {\n        var successMessageClass = configuration.successMessageClass\n                                  || nod.classes.successMessageClass,\n          errorMessageClass   = configuration.errorMessageClass\n                                || nod.classes.errorMessageClass;\n\n        span.style.display = 'none';\n\n        switch (status) {\n        case nod.constants.VALID:\n            nod.removeClass(errorMessageClass, span);\n            nod.addClass(successMessageClass, span);\n\n            if (configuration.successMessage) {\n                span.textContent = configuration.successMessage;\n                span.style.display = '';\n            }\n\n            break;\n\n        case nod.constants.INVALID:\n            nod.removeClass(successMessageClass, span);\n            nod.addClass(errorMessageClass, span);\n            span.textContent = errorMessage;\n            span.style.display = '';\n            break;\n        }\n    }\n\n    function set (options) {\n        var status              = options.result,\n            errorMessage        = options.errorMessage;\n\n        // If the dom is showing an invalid message, we want to update the dom\n        // right away.\n        if (_status === nod.constants.INVALID || configuration.delay === 0) {\n            _status = status;\n            updateParent(status);\n            updateSpan(status, errorMessage);\n        } else {\n            // If the dom shows either an unchecked or a valid state we won't\n            // rush to tell them they are wrong. Instead we use a method similar\n            // to \"debouncing\" the update\n            clearTimeout(pendingUpdate);\n\n            pendingUpdate = setTimeout(function () {\n                _status = status;\n                updateParent(status);\n                updateSpan(status, errorMessage);\n                pendingUpdate = null;\n            }, configuration.delay || nod.constants.DELAY);\n        }\n    }\n\n    function subscribeTo (id) {\n        mediator.subscribe(id, set);\n    }\n\n    function setMessageOptions (parentContainer, message) {\n        if (parentContainer) {\n            parent = nod.getElement(parentContainer);\n        }\n\n        if (message) {\n            span.parentNode.removeChild(span);      // Remove old span.\n            span = nod.getElement(message);         // Set the new one.\n            customSpan = true;                      // So we won't delete it.\n        }\n    }\n\n    function dispose () {\n        // First remove any classes\n        nod.removeClass(configuration.errorClass\n                        || nod.classes.errorClass, parent);\n        nod.removeClass(configuration.successClass\n                        || nod.classes.successClass, parent);\n\n        // Then we remove the span if it wasn't one that was set by the user.\n        // If `noDom` was used, then there won't be any to remove.\n        if (span.parentNode && !customSpan) {\n            span.parentNode.removeChild(span);\n        }\n    }\n\n    return {\n        subscribeTo:        subscribeTo,\n        element:            element,\n        setMessageOptions:  setMessageOptions,\n        dispose:            dispose,\n        set:                set\n    };\n};\n\nnod.makeEventEmitter = function (mediator) {\n    var customEvent;\n\n    function emit (options) {\n        if (CustomEvent) {\n            customEvent = new CustomEvent('nod.validation', {detail: options});\n\n            options.element.dispatchEvent(customEvent);\n        } else {\n            var errorMsg = 'nod.validate tried to fire a custom event, but ' +\n                           'the browser does not support CustomEvent\\'s';\n\n            throw Error(errorMsg);\n        }\n    }\n\n    function subscribe (id) {\n        mediator.subscribe(id, emit);\n    }\n\n    return {\n        subscribe: subscribe\n    };\n};\n\n/**\n * getElement\n *\n * Returns the first element targeted by the selector. (see `getElements`)\n */\nnod.getElement = function (selector) {\n    return nod.getElements(selector)[0];\n};\n\n/**\n * getElements\n *\n * Takes some sort of selector, and returns an array of element(s). The applied\n * selector can be one of:\n *\n * - Css type selector (e.g., \".foo\")\n * - A jQuery element (e.g., $('.foo))\n * - A single raw dom element (e.g., document.getElementById('foo'))\n * - A list of raw dom element (e.g., $('.foo').get())\n */\nnod.getElements = function (selector) {\n    if (!selector) {\n        return [];\n    }\n\n    // Normal css type selector is assumed\n    if (typeof selector === 'string') {\n        // If we have jQuery, then we use that to create a dom list for us.\n        if (window.jQuery) {\n            return window.jQuery(selector).get();\n        }\n\n        // If not, then we do it the manual way.\n        var nodeList = document.querySelectorAll(selector);\n\n        return [].map.call(nodeList, function (el) {\n            return el;\n        });\n    }\n\n    // if user gave us jQuery elements\n    if (selector.jquery) {\n        return selector.get();\n    }\n\n    // Raw DOM element\n    if (selector.nodeType === 1) {\n        return [selector];\n    }\n\n    if (Array.isArray(selector)) {\n        var result = [];\n\n        selector.forEach(function (sel) {\n            var elements = nod.getElements(sel);\n\n            result = result.concat(elements);\n        });\n\n        return result;\n    }\n\n    throw Error('Unknown type of elements in your `selector`: ' + selector);\n};\n\nnod.getCheckFunction = function (metric) {\n    if (typeof metric.validate === 'function') {\n        return metric.validate;\n    }\n\n    if (metric.validate instanceof RegExp) {\n        return nod.checkFunctions.regexp(metric.validate);\n    }\n\n    var args   = metric.validate.split(':'),\n        fnName = args.shift();\n\n    if (fnName === 'one-of' || fnName === 'only-one-of' ||\n        fnName === 'same-as' || fnName === 'some-radio') {\n        args.push(metric.selector);\n    }\n\n    if (typeof nod.checkFunctions[fnName] === 'function') {\n        return nod.checkFunctions[fnName].apply(null, args);\n    } else {\n        var errorMsg = 'Couldn\\'t find your validator function \"' +\n                       fnName + '\" for \"' + metric.selector + '\"';\n\n        throw Error(errorMsg);\n    }\n};\n\n// Collection of built-in check functions\nnod.checkFunctions = {\n    'presence': function () {\n        return function presence (callback, value) {\n            callback(value.length > 0);\n        };\n    },\n\n    'exact': function (exactValue) {\n        return function exact (callback, value) {\n            callback(value === exactValue);\n        };\n    },\n\n    'contains': function (containsValue) {\n        return function contains (callback, value) {\n            callback(value.indexOf(containsValue) > -1);\n        };\n    },\n\n    'not': function (exactValue) {\n        return function not (callback, value) {\n            callback(value !== exactValue);\n        };\n    },\n\n    'min-length': function (minimumLength) {\n        return function minLength (callback, value) {\n            callback(value.length >= minimumLength);\n        };\n    },\n\n    'max-length': function (maximumLength) {\n        return function maxLength (callback, value) {\n            callback(value.length <= maximumLength);\n        };\n    },\n\n    'exact-length': function (exactLen) {\n        return function exactLength (callback, value) {\n            callback(value.length === +exactLen);\n        };\n    },\n\n    'between-length': function (minimumLength, maximumLength) {\n        return function betweenLength (callback, value) {\n            var aboveMinLength = value.length >= minimumLength,\n                belowMaxLength = value.length <= maximumLength;\n\n            callback(aboveMinLength && belowMaxLength);\n        };\n    },\n\n    'max-number': function (maximumNumber) {\n        return function maxNumber (callback, value) {\n            callback(+value <= maximumNumber);\n        };\n    },\n\n    'min-number': function (minimumNumber) {\n        return function minNumber (callback, value) {\n            callback(+value >= minimumNumber);\n        };\n    },\n\n    'between-number': function (minimumNumber, maximumNumber) {\n        return function betweenNumber (callback, value) {\n            callback(+value >= minimumNumber && +value <= maximumNumber);\n        };\n    },\n\n    'integer': function () {\n        return function (callback, value) {\n            callback(/^\\s*\\d+\\s*$/.test(value));\n        };\n    },\n\n    'float': function () {\n        return function (callback, value) {\n            callback(/^[-+]?[0-9]+(\\.[0-9]+)?$/.test(value));\n        };\n    },\n\n    'same-as': function (selector) {\n        var sameAsElement = nod.getElement(selector);\n\n        return function sameAs (callback, value, options) {\n            // 'same-as' is special, in that if it is triggered by another field\n            // (the one it should be similar to), and the field itself is empty,\n            // then it bails out without a check. This is to avoid showing an\n            // error message before the user has even reached the element.\n            if (options &&\n                options.event &&\n                options.event.target &&\n                options.event.target !== options.element &&\n                value.length === 0) {\n                return;\n            }\n\n            callback(value === sameAsElement.value);\n        };\n    },\n\n    'one-of': function (selector) {\n        var elements = nod.getElements(selector);\n\n        function getValues () {\n            return elements.reduce(function (memo, element) {\n                return memo + '' + (element.value || '');\n            }, '');\n        }\n\n        return function oneOf (callback) {\n            callback(getValues().trim().length > 0);\n        };\n    },\n\n    'only-one-of': function (selector) {\n        var elements = nod.getElements(selector);\n\n        return function onlyOneOf (callback, value) {\n            var numOfValues = 0;\n\n            elements.forEach(function (element) {\n                if (element.value) {\n                    numOfValues++;\n                }\n            });\n\n            callback(numOfValues === 1);\n        };\n    },\n\n    'checked': function () {\n        return function checked (callback, value, options) {\n            callback(options.element.checked);\n        };\n    },\n\n    'some-radio': function (selector) {\n        var radioElements = nod.getElements(selector);\n\n        return function someRadio (callback, value, options) {\n            var result = radioElements.reduce(function (memo, element) {\n                return memo || element.checked;\n            }, false);\n\n            callback(result);\n        };\n    },\n\n    'regexp': function (reg) {\n        return function regExp (callback, value) {\n            callback(reg.test(value));\n        };\n    },\n\n    'email': function () {\n        var RFC822 = /^([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x22([^\\x0d\\x22\\x5c\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x22))*\\x40([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d)(\\x2e([^\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2e\\x3a-\\x3c\\x3e\\x40\\x5b-\\x5d\\x7f-\\xff]+|\\x5b([^\\x0d\\x5b-\\x5d\\x80-\\xff]|\\x5c[\\x00-\\x7f])*\\x5d))*$/;\n\n        return function email (callback, value) {\n            callback(RFC822.test(value));\n        };\n    }\n};\n\n// CustomEvent polyfill for older IE versions. Taken from\n// github.com/d4tocchini/customevent-polyfill/blob/master/CustomEvent.js\ntry {\n    new CustomEvent(\"test\");\n} catch (e) {\n    var CustomEvent = function (event, params) {\n        var evt;\n        params = params || {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined\n        };\n\n        evt = document.createEvent(\"CustomEvent\");\n        evt.initCustomEvent(event,\n                            params.bubbles,\n                            params.cancelable,\n                            params.detail);\n        return evt;\n    };\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent;\n}\n\n// Safely export nod.\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = nod;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/nod-validate/nod.js\n// module id = 362\n// module chunks = 0 1 2 3 5 6 7 8 9 10","import $ from 'jquery';\nimport _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.contains(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('field-type')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/common/form-utils.js","module.exports = require('./includes');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/collection/contains.js\n// module id = 364\n// module chunks = 2 3 5 6 7 8 9","var baseIndexOf = require('../internal/baseIndexOf'),\n    getLength = require('../internal/getLength'),\n    isArray = require('../lang/isArray'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    isLength = require('../internal/isLength'),\n    isString = require('../lang/isString'),\n    values = require('../object/values');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `target` is in `collection` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n * from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @alias contains, include\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {*} target The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n * // => true\n *\n * _.includes('pebbles', 'eb');\n * // => true\n */\nfunction includes(collection, target, fromIndex, guard) {\n  var length = collection ? getLength(collection) : 0;\n  if (!isLength(length)) {\n    collection = values(collection);\n    length = collection.length;\n  }\n  if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n    fromIndex = 0;\n  } else {\n    fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n  }\n  return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n    ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, target, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/collection/includes.js\n// module id = 365\n// module chunks = 2 3 5 6 7 8 9","/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  var index = -1,\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = object[props[index]];\n  }\n  return result;\n}\n\nmodule.exports = baseValues;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/baseValues.js\n// module id = 366\n// module chunks = 2 3 5 6 7 8 9","var deburr = require('../string/deburr'),\n    words = require('../string/words');\n\n/**\n * Creates a function that produces compound words out of the words in a\n * given string.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    var index = -1,\n        array = words(deburr(string)),\n        length = array.length,\n        result = '';\n\n    while (++index < length) {\n      result = callback(result, array[index], index);\n    }\n    return result;\n  };\n}\n\nmodule.exports = createCompounder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/createCompounder.js\n// module id = 367\n// module chunks = 2 3 5 6 7 8 9","/**\n * Gets the index at which the first occurrence of `NaN` is found in `array`.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n */\nfunction indexOfNaN(array, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 0 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    var other = array[index];\n    if (other !== other) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = indexOfNaN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/internal/indexOfNaN.js\n// module id = 368\n// module chunks = 2 3 5 6 7 8 9","var baseValues = require('../internal/baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/object/values.js\n// module id = 369\n// module chunks = 2 3 5 6 7 8 9","var createCompounder = require('../internal/createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar');\n * // => 'fooBar'\n *\n * _.camelCase('__foo_bar__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n});\n\nmodule.exports = camelCase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/string/camelCase.js\n// module id = 370\n// module chunks = 2 3 5 6 7 8 9","var baseToString = require('../internal/baseToString');\n\n/**\n * Capitalizes the first character of `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('fred');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  string = baseToString(string);\n  return string && (string.charAt(0).toUpperCase() + string.slice(1));\n}\n\nmodule.exports = capitalize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/string/capitalize.js\n// module id = 371\n// module chunks = 2 3 5 6 7 8 9","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/string/deburr.js\n// module id = 372\n// module chunks = 2 3 5 6 7 8 9","var baseToString = require('../internal/baseToString'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/** Used to match words to create compound words. */\nvar reWords = (function() {\n  var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n      lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n  return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n}());\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  if (guard && isIterateeCall(string, pattern, guard)) {\n    pattern = undefined;\n  }\n  string = baseToString(string);\n  return string.match(pattern || reWords) || [];\n}\n\nmodule.exports = words;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/string/words.js\n// module id = 373\n// module chunks = 2 3 5 6 7 8 9","import $ from 'jquery';\nimport nod from '../common/nod';\nimport { CollapsibleEvents } from '../common/collapsible';\nimport forms from '../common/models/forms';\n\nexport default class {\n    constructor($reviewForm) {\n        this.validator = nod({\n            submit: $reviewForm.find('input[type=\"submit\"]'),\n        });\n\n        this.$reviewsContent = $('#product-reviews');\n        this.$collapsible = $('[data-collapsible]', this.$reviewsContent);\n\n        this.initLinkBind();\n        this.injectPaginationLink();\n        this.collapseReviews();\n    }\n\n    /**\n     * On initial page load, the user clicks on \"(12 Reviews)\" link\n     * The browser jumps to the review page and should expand the reviews section\n     */\n    initLinkBind() {\n        const $content = $('#productReviews-content', this.$reviewsContent);\n\n        $('.productView-reviewLink').click(() => {\n            if (!$content.hasClass('is-open')) {\n                this.$collapsible.trigger(CollapsibleEvents.click);\n            }\n        });\n    }\n\n    collapseReviews() {\n        // We're in paginating state, do not collapse\n        if (window.location.hash && window.location.hash.indexOf('#product-reviews') === 0) {\n            return;\n        }\n\n        // force collapse on page load\n        this.$collapsible.trigger(CollapsibleEvents.click);\n    }\n\n    /**\n     * Inject ID into the pagination link\n     */\n    injectPaginationLink() {\n        const $nextLink = $('.pagination-item--next .pagination-link', this.$reviewsContent);\n        const $prevLink = $('.pagination-item--previous .pagination-link', this.$reviewsContent);\n\n        if ($nextLink.length) {\n            $nextLink.attr('href', `${$nextLink.attr('href')} #product-reviews`);\n        }\n\n        if ($prevLink.length) {\n            $prevLink.attr('href', `${$prevLink.attr('href')} #product-reviews`);\n        }\n    }\n\n    registerValidation() {\n        this.validator.add([{\n            selector: '[name=\"revrating\"]',\n            validate: 'presence',\n            errorMessage: 'The \\'Rating\\' field cannot be blank.',\n        }, {\n            selector: '[name=\"revtitle\"]',\n            validate: 'min-length:2',\n            errorMessage: 'The \\'Review Subject\\' field cannot be blank.',\n        }, {\n            selector: '[name=\"revtext\"]',\n            validate: 'min-length:2',\n            errorMessage: 'The \\'Comments\\' field cannot be blank.',\n        }, {\n            selector: '[name=\"email\"]',\n            validate: (cb, val) => {\n                const result = forms.email(val);\n                cb(result);\n            },\n            errorMessage: 'Please use a valid email address, such as user@example.com.',\n        }]);\n\n        return this.validator;\n    }\n\n    validate() {\n        return this.validator.performCheck();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/product/reviews.js","import $ from 'jquery';\n\nexport class VideoGallery {\n    constructor($element) {\n        this.$player = $element.find('[data-video-player]');\n        this.$videos = $element.find('[data-video-item]');\n        this.currentVideo = {};\n        this.bindEvents();\n    }\n\n    selectNewVideo(e) {\n        e.preventDefault();\n\n        const $target = $(e.currentTarget);\n\n        this.currentVideo = {\n            id: $target.data('video-id'),\n            $selectedThumb: $target,\n        };\n\n        this.setMainVideo();\n        this.setActiveThumb();\n    }\n\n    setMainVideo() {\n        this.$player.attr('src', `//www.youtube.com/embed/${this.currentVideo.id}`);\n    }\n\n    setActiveThumb() {\n        this.$videos.removeClass('is-active');\n        this.currentVideo.$selectedThumb.addClass('is-active');\n    }\n\n    bindEvents() {\n        this.$videos.on('click', this.selectNewVideo.bind(this));\n    }\n}\n\nexport default function videoGallery() {\n    const pluginKey = 'video-gallery';\n    const $videoGallery = $(`[data-${pluginKey}]`);\n\n    $videoGallery.each((index, element) => {\n        const $el = $(element);\n        const isInitialized = $el.data(pluginKey) instanceof VideoGallery;\n\n        if (isInitialized) {\n            return;\n        }\n\n        $el.data(pluginKey, new VideoGallery($el));\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/product/video-gallery.js","/*\n Import all product specific js\n */\nimport $ from 'jquery';\nimport PageManager from './page-manager';\nimport Review from './product/reviews';\nimport collapsibleFactory from './common/collapsible';\nimport ProductDetails from './common/product-details';\nimport videoGallery from './product/video-gallery';\nimport { classifyForm } from './common/form-utils';\n\nexport default class Product extends PageManager {\n    constructor(context) {\n        super(context);\n        this.url = location.href;\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\n    }\n\n    before(next) {\n        // Listen for foundation modal close events to sanitize URL after review.\n        $(document).on('close.fndtn.reveal', () => {\n            if (this.url.indexOf('#write_review') !== -1 && typeof window.history.replaceState === 'function') {\n                window.history.replaceState(null, document.title, window.location.pathname);\n            }\n        });\n\n        next();\n    }\n\n    loaded(next) {\n        let validator;\n\n        // Init collapsible\n        collapsibleFactory();\n\n        this.productDetails = new ProductDetails($('.productView'), this.context, window.BCData.product_attributes);\n\n        videoGallery();\n\n        const $reviewForm = classifyForm('.writeReview-form');\n        const review = new Review($reviewForm);\n\n        $('body').on('click', '[data-reveal-id=\"modal-review-form\"]', () => {\n            validator = review.registerValidation();\n        });\n\n        $reviewForm.on('submit', () => {\n            if (validator) {\n                validator.performCheck();\n                return validator.areAll('valid');\n            }\n\n            return false;\n        });\n\n        next();\n    }\n\n    after(next) {\n        this.productReviewHandler();\n\n        next();\n    }\n\n    productReviewHandler() {\n        if (this.url.indexOf('#write_review') !== -1) {\n            this.$reviewLink.click();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/product.js"],"sourceRoot":""}